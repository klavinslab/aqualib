argument
  plasmid_ids: generic, "List of plasmid ids"
  yeast_item_ids: generic, "List of yeast strain item ids that you are going to transform plasmid into"
  aliquot_numbers: number array, "List of number of aliquots to make from each yeast item"
  yeast_transformed_strain_ids: generic, "List of transformed yeast strain ids"
  debug_mode: string, "Yes or No"
end

place startovernight
protocol: "aqualib:workflows/yeast/010_overnight_suspension.rb"
  argument
    plasmid_ids: plasmid_ids
    yeast_item_ids: yeast_item_ids
    aliquot_numbers: aliquot_numbers
    yeast_transformed_strain_ids: yeast_transformed_strain_ids
    debug_mode: debug_mode
  end
  group: "technicians"
  marked: true
  start: now()
  window: hours(20)
end

place innoculate
  protocol: "aqualib:workflows/yeast/015_inoculate_large_volume_growth.rb"
  group: "technicians"
  start: now()
  window: hours(20)
end

place digest
  protocol: "aqualib:workflows/yeast/030_digest_plasmid_yeast_transforamtion.rb"
  group: "technicians"
  start: now()
  window: hours(20)
end

place makecompcell
  protocol: "aqualib:workflows/yeast/021_make_yeast_competent_cells.rb"
  group: "technicians"
  start: now()
  window: hours(20)
end

place transformation
  protocol: "aqualib:workflows/yeast/040_yeast_transformation.rb"
  group: "technicians"
  start: now()
  window: hours(20)
end

place plate
  protocol: "aqualib:workflows/yeast/050_plate_yeast_transformation.rb"
  group: "technicians"
  start: now()
  window: hours(20)
end


wire startovernight => innoculate
wire innoculate => digest
wire digest => makecompcell
wire makecompcell => transformation
wire transformation => plate

transition [ startovernight ] => [ innoculate ] when !error(0) && completed(0) end
transition [ innoculate ] => [ digest ] when !error(0) && completed(0) end
transition [ digest ] => [ makecompcell ] when !error(0) && completed(0) end
transition [ makecompcell ] => [ transformation ] when !error(0) && completed(0) end
transition [ transformation ] => [ plate ] when !error(0) && completed(0) end
transition [ plate ] => [] when !error(0) && completed(0) end
